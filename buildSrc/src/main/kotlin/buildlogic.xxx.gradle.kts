import org.jetbrains.dokka.DokkaConfiguration.Visibility
import org.jetbrains.dokka.gradle.DokkaTaskPartial

/*
 * This file was generated by the Gradle 'init' task.
 */


group = "ski.gagar.vertigram"

plugins {
    kotlin("jvm")
    `java-library`
    `maven-publish`
    signing
    id("org.jetbrains.dokka")
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile>().configureEach {
    kotlinOptions {
        jvmTarget = "21"
    }
}

tasks.withType<DokkaTaskPartial>().configureEach {
    dokkaSourceSets {

        named("main") {
            includes.from("Module.md")

            documentedVisibilities.set(setOf(
                Visibility.PUBLIC,
                Visibility.PROTECTED
            ))
            perPackageOption {
                matchingRegex.set(".*internal.*")
                suppress.set(true)

            }
//        sourceLink {
//            val exampleDir = "https://github.com/Kotlin/dokka/tree/master/examples/gradle/dokka-multimodule-example"
//
//            localDirectory.set(rootProject.projectDir)
//            remoteUrl.set(URI(exampleDir).toURL())
//            remoteLineSuffix.set("#L")
//        }
        }


    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType<Test> {
    useJUnitPlatform()
}



java.sourceCompatibility = JavaVersion.VERSION_21

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])

        pom {
            name.set(project.name)
            description.set(project.description)
            url.set("https://vertigram.gagar.ski/")
            licenses {
                license {
                    name.set("Apache License, Version 2.0")
                    url.set("https://opensource.org/licenses/Apache-2.0")
                }
            }
            developers {
                developer {
                    name.set("Kirill Gagarski")
                    email.set("kirill.gagarski@gmail.com")
                }
            }
            scm {
                url.set(
                    "https://github.com/gagarski/vertigram.git"
                )
                connection.set(
                    "scm:git:git://github.com/gagarski/vertigram.git"
                )
                developerConnection.set(
                    "scm:git:git://github.com/gagarski/vertigram.git"
                )
            }
            issueManagement {
                url.set("https://github.com/gagarski/vertigram/issues")
            }
        }
    }
}

signing {
    sign(publishing.publications["maven"])
}